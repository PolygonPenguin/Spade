// Point.spade
// Represents a 2D point (x, y coordinates).

class Point uses Default:

Float x; // x-coordinate.
Float y; // y-coordinate.

// Constructor: Initializes a new Point.
public Point _construct_(Float x, Float y) {
    x = x; // No 'self.' needed; no ambiguity.
    y = y;
    return self; // Constructors must return 'self'.
}

// Returns a string representation of the Point.
public String toString() {
    return "Point(" + x.toString() + ", " + y.toString() + ")";
}

// Overloads the equality operator (==).
public Bool _equals_(Object other) {
    // Use Default.isInstance() for safe type checking.
    if (isInstance(other, Point)) {
        Point otherPoint = other; // Safe cast after isInstance check.
        return x == otherPoint.x && y == otherPoint.y;
    }
    return false; // Not equal if 'other' isn't a Point.
}